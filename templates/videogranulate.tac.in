#!/usr/bin/env python
# coding: utf-8

from os.path import dirname, abspath, join
from sys import path

ROOT = abspath(dirname(__file__))
ETC = join('ROOT','..','etc')
path.append(ROOT)
path.append(ETC)

import cyclone.web
from twisted.application import service, internet
from twisted.python.logfile import DailyLogFile
from twisted.python.log import ILogObserver, FileLogObserver
from nsivideogranulate.http import HttpHandler
from nsivideogranulate.auth import Authentication
from ConfigParser import RawConfigParser

CONF = '${conf-path}'
DB_FILE = '${db-file}'

SAM_URL = '${sam:url}'
SAM_USER = '${sam:user}'
SAM_PASS = '${sam:pass}'

TASK_QUEUE = '${task_queue}'

VIDEOCONVERT_URL = '${videoconvert:url}'
VIDEOCONVERT_USER = '${videoconvert:user}'
VIDEOCONVERT_PASS = '${videoconvert:pass}'

def get_authenticator(conf):
    return Authentication(DB_FILE)

class VideoGranulate(cyclone.web.Application):

    def __init__(self):
        handlers = [
            (r"/", HttpHandler),
        ]

        settings = {
            "auth": get_authenticator(CONF),
            "sam_user": SAM_USER,
            "sam_pass": SAM_PASS,
            "sam_url": SAM_URL,
            "videoconvert_user": VIDEOCONVERT_USER,
            "videoconvert_pass": VIDEOCONVERT_PASS,
            "videoconvert_url": VIDEOCONVERT_URL,
            "task_queue": TASK_QUEUE,
        }

        cyclone.web.Application.__init__(self, handlers, **settings)


logfile = DailyLogFile("videogranulate.log", "${buildout:log-directory}")
application = service.Application("VideoGranulate Service")
application.setComponent(ILogObserver, FileLogObserver(logfile).emit)
srv = internet.TCPServer(${port}, VideoGranulate(), interface='${host}')
srv.setServiceParent(application)

